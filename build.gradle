import aQute.bnd.osgi.Processor

buildscript {
    repositories {
        jcenter()
        mavenCentral()
//		maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
		maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.3.0'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
	id "org.jdrupes.mdoclet" version "1.0.2"
}
apply plugin: 'biz.aQute.bnd.builder'
apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'maven'
// Makes Eclipse-groovy handle *.gradle file properly
apply plugin:'groovy'

group = 'org.jdrupes.httpcodec'
description = "HTTP coders and decoders for non-blocking I/O"

version = "0.9.13" + "-SNAPSHOT"

archivesBaseName = 'httpcodec'

repositories {
    jcenter()
    mavenCentral()
//	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
//	maven { url 'https://jitpack.io' }
}

configurations {
    javadocTaglets
}

dependencies {
    compileOnly 'org.osgi:org.osgi.annotation:6.0.0'
    testCompile 'junit:junit:4.12'
}

// Configure sensible layout
sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
    }

    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'resources'
        }
    }
}

jar {
	manifest {
		attributes('Bundle-Version': version)
	}
    into('META-INF') {
        from 'resources/META-INF'
    }
}

dependencies {
	javadocTaglets "org.jdrupes.taglets:plantuml-taglet:1.0.3"
	// javadocTaglets 'com.github.mnlipp:jdrupes-taglets:1.0.2'
}

javadoc {
    options.tagletPath = configurations.javadocTaglets.files as List
    options.taglets = ["org.jdrupes.taglets.plantUml.Taglet"]

    classpath = project.sourceSets.main.compileClasspath
    source = sourceSets.main.allJava
	options.addStringOption("overview", "overview.md")
	inputs.file "overview.md"
	options.addBooleanOption("linksource", true)
	options.stylesheetFile(file("stylesheet.css"))
    options.addStringOption("bottom", file("misc/javadoc.bottom.txt").text)
    options.addStringOption("link", "http://docs.oracle.com/javase/8/docs/api/")
    destinationDir = file("../jdrupes-httpcodec.gh-pages/javadoc")
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier "sources"
}

task javadocJar(type: Jar) {
	dependsOn "javadoc"
	from javadoc.destinationDir
	classifier "javadoc"
}

// Allow build without signing information (e.g. travis)
if (project.hasProperty('signing.keyId')) {
	signing {
		sign configurations.archives
	}
}

// MavenPublishing (new), incomplete, works only for local. 

publishing {
	
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			from components.java
			artifact sourcesJar
			artifact javadocJar
		}
	}
}

// MavenPublishing (original), still needed for remote 

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
 
			pom.project {
			
				name project.name
				artifactId project.archivesBaseName
				packaging 'pom'
				description project.description
				url 'https://github.com/mnlipp/jdrupes-httpcodec'
 
				scm {
					url 'scm:git@github.com:mnlipp/jdrupes-httpcodec.git'
					connection 'scm:git@github.com:mnlipp/jdrupes-httpcodec.git'
					developerConnection 'git@github.com:mnlipp/jdrupes-httpcodec.git'
				}
 
				licenses {
					license {
						name 'LGPL 3.0'
						url 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
						distribution 'repo'
					}
				}
 
				developers {
					developer {
						id 'mnlipp'
						name 'Michael N. Lipp'
					}
				}
			}
			
			artifacts {
				archives jar
				archives sourcesJar
				archives javadocJar
			}

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: project.properties['sonatypeUsername'] ?: "nouser", 
					password: project.properties['sonatypePassword'] ?: "nopass")
			}
			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: project.properties['sonatypeUsername'] ?: "nouser", 
					password: project.properties['sonatypePassword'] ?: "nopass")
			}

		}
	}
}

bintray {
	user = project.properties['bintrayUser'] ?: "nouser"
	key = project.properties['bintrayApiKey'] ?: "nokey"
	publications = ['mavenJava']
	publish = true
	pkg {
		repo = "org.jdrupes"
		name = "httpcodec"
		version {
			 name = project.version
			 gpg {
				 sign = true
			 }
		}
	}
 }
